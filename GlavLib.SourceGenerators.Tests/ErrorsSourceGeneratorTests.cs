using GlavLib.SourceGenerators.Tests.Helpers;
using Microsoft.CodeAnalysis;

namespace GlavLib.SourceGenerators.Tests;

public sealed class ErrorsSourceGeneratorTests : SourceGeneratorTestsBase
{
    [Fact]
    public void It_should_generate_error_message()
    {
        //language=yaml
        const string source = """
                              Namespace: GlavKod.Tests
                              ClassName: SystemErrors

                              Errors:
                                WrongFormat: Неверный формат
                              """;

        var result = Run("system.errors.yaml", source);

        //language=CSharp
        const string expected = """
                                /// <auto-generated/>
                                using System;
                                using System.Globalization;
                                using GlavLib.Abstractions.Validation;

                                namespace GlavKod.Tests
                                {
                                    public static class SystemErrors
                                    {
                                        public static readonly Error WrongFormat = new("GlavKod.Tests.SystemErrors.WrongFormat", null, "Неверный формат");
                                    }
                                }
                                """;

        Assert.Equal(expected, result, ignoreLineEndingDifferences: true);
    }

    [Fact]
    public void It_should_generate_error_message_with_custom_code()
    {
        //language=yaml
        const string source = """
                              Namespace: GlavKod.Tests
                              ClassName: SystemErrors

                              Errors:
                                WrongFormat:
                                  Code: PaymentDenied
                                  Message: Неверный формат
                              """;

        var result = Run("system.errors.yaml", source);

        //language=CSharp
        const string expected = """
                                /// <auto-generated/>
                                using System;
                                using System.Globalization;
                                using GlavLib.Abstractions.Validation;

                                namespace GlavKod.Tests
                                {
                                    public static class SystemErrors
                                    {
                                        public static readonly Error WrongFormat = new("GlavKod.Tests.SystemErrors.WrongFormat", "PaymentDenied", "Неверный формат");
                                    }
                                }
                                """;

        Assert.Equal(expected, result, ignoreLineEndingDifferences: true);
    }

    [Fact]
    public void It_should_generate_error_func()
    {
        //language=yaml
        const string source = """
                              Namespace: GlavKod.Tests
                              ClassName: SystemErrors

                              Errors:
                                WrongSum: "Неверная сумма: {sum:decimal}"
                              """;

        var result = Run("system.errors.yaml", source);

        //language=CSharp
        const string expected = """
                                /// <auto-generated/>
                                using System;
                                using System.Globalization;
                                using GlavLib.Abstractions.Validation;

                                namespace GlavKod.Tests
                                {
                                    public static class SystemErrors
                                    {
                                        public static Error WrongSum(decimal sum)
                                        {
                                            var args = new Dictionary<string, string>();
                                            args["sum"] = sum.ToString();
                                            FormattableString message = $"Неверная сумма: {sum}";
                                            return new Error("GlavKod.Tests.SystemErrors.WrongSum", null, message.ToString(CultureInfo.InvariantCulture), args);
                                        }
                                    }
                                }
                                """;

        Assert.Equal(expected, result, ignoreLineEndingDifferences: true);
    }

    [Fact]
    public void It_should_generate_error_func_with_code()
    {
        //language=yaml
        const string source = """
                              Namespace: GlavKod.Tests
                              ClassName: SystemErrors

                              Errors:
                                WrongSum:
                                  Code: WrongSum
                                  Message: "Неверная сумма: {sum:decimal}"
                              """;

        var result = Run("system.errors.yaml", source);

        //language=CSharp
        const string expected = """
                                /// <auto-generated/>
                                using System;
                                using System.Globalization;
                                using GlavLib.Abstractions.Validation;

                                namespace GlavKod.Tests
                                {
                                    public static class SystemErrors
                                    {
                                        public static Error WrongSum(decimal sum)
                                        {
                                            var args = new Dictionary<string, string>();
                                            args["sum"] = sum.ToString();
                                            FormattableString message = $"Неверная сумма: {sum}";
                                            return new Error("GlavKod.Tests.SystemErrors.WrongSum", "WrongSum", message.ToString(CultureInfo.InvariantCulture), args);
                                        }
                                    }
                                }
                                """;

        Assert.Equal(expected, result, ignoreLineEndingDifferences: true);
    }

    [Fact]
    public void It_should_generate_error_func_with_argument_format()
    {
        //language=yaml
        const string source = """
                              Namespace: GlavKod.Tests
                              ClassName: SystemErrors

                              Errors:
                                WrongSum: "Неверная сумма: {sum:decimal:F2}"
                              """;

        var result = Run("system.errors.yaml", source);

        //language=CSharp
        const string expected = """
                                /// <auto-generated/>
                                using System;
                                using System.Globalization;
                                using GlavLib.Abstractions.Validation;

                                namespace GlavKod.Tests
                                {
                                    public static class SystemErrors
                                    {
                                        public static Error WrongSum(decimal sum)
                                        {
                                            var args = new Dictionary<string, string>();
                                            args["sum"] = sum.ToString("F2");
                                            FormattableString message = $"Неверная сумма: {sum:F2}";
                                            return new Error("GlavKod.Tests.SystemErrors.WrongSum", null, message.ToString(CultureInfo.InvariantCulture), args);
                                        }
                                    }
                                }
                                """;

        Assert.Equal(expected, result, ignoreLineEndingDifferences: true);
    }

    [Fact]
    public void It_should_generate_error_func_with_nullable_argument()
    {
        //language=yaml
        const string source = """
                              Namespace: GlavKod.Tests
                              ClassName: SystemErrors

                              Errors:
                                WrongSum: "Неверная сумма: {sum:decimal?}"
                              """;

        var result = Run("system.errors.yaml", source);

        //language=CSharp
        const string expected = """
                                /// <auto-generated/>
                                using System;
                                using System.Globalization;
                                using GlavLib.Abstractions.Validation;

                                namespace GlavKod.Tests
                                {
                                    public static class SystemErrors
                                    {
                                        public static Error WrongSum(decimal? sum)
                                        {
                                            var args = new Dictionary<string, string>();
                                            if (sum is not null)
                                                args["sum"] = sum.Value.ToString();
                                            FormattableString message = $"Неверная сумма: {sum}";
                                            return new Error("GlavKod.Tests.SystemErrors.WrongSum", null, message.ToString(CultureInfo.InvariantCulture), args);
                                        }
                                    }
                                }
                                """;

        Assert.Equal(expected, result, ignoreLineEndingDifferences: true);
    }

    [Fact]
    public void It_should_generate_error_func_with_nullable_argument_and_format()
    {
        //language=yaml
        const string source = """
                              Namespace: GlavKod.Tests
                              ClassName: SystemErrors

                              Errors:
                                WrongSum: "Неверная сумма: {sum:decimal?:F2}"
                              """;

        var result = Run("system.errors.yaml", source);

        //language=CSharp
        const string expected = """
                                /// <auto-generated/>
                                using System;
                                using System.Globalization;
                                using GlavLib.Abstractions.Validation;

                                namespace GlavKod.Tests
                                {
                                    public static class SystemErrors
                                    {
                                        public static Error WrongSum(decimal? sum)
                                        {
                                            var args = new Dictionary<string, string>();
                                            if (sum is not null)
                                                args["sum"] = sum.Value.ToString("F2");
                                            FormattableString message = $"Неверная сумма: {sum:F2}";
                                            return new Error("GlavKod.Tests.SystemErrors.WrongSum", null, message.ToString(CultureInfo.InvariantCulture), args);
                                        }
                                    }
                                }
                                """;

        Assert.Equal(expected, result, ignoreLineEndingDifferences: true);
    }

    [Fact]
    public void It_should_generate_without_namespace()
    {
        //language=yaml
        const string source = """
                              ClassName: SystemErrors

                              Errors:
                                WrongFormat: Неверный формат
                              """;

        var result = Run("system.errors.yaml", source);

        //language=CSharp
        const string expected = """
                                /// <auto-generated/>
                                using System;
                                using System.Globalization;
                                using GlavLib.Abstractions.Validation;

                                public static class SystemErrors
                                {
                                    public static readonly Error WrongFormat = new("SystemErrors.WrongFormat", null, "Неверный формат");
                                }
                                """;

        Assert.Equal(expected, result, ignoreLineEndingDifferences: true);
    }


    private static string Run(string filePath, string errorMessagesJson)
    {
        return RunSourceGenerator(sourceGenerator: new ErrorsSourceGenerator().AsSourceGenerator(),
                                  sourceCode: null,
                                  resultFile: "SystemErrors.g.cs",
                                  additionalTexts: new[]
                                  {
                                      new TestAdditionalText(path: filePath, text: errorMessagesJson)
                                  });
    }
}